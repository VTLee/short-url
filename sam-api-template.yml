Transform: 'AWS::Serverless-2016-10-31'

Parameters: 
  APICERTIFICATEARN:
    Type: String
  APIDOMAINNAME:
    Type: String
  CFDOMAINNAME:
    Type: String
  CFCERTIFICATEARN:
    Type: String
  S3CODEBUCKET:
    Type: String
  S3CODEKEY:
    Type: String
  LAMBDAMEMORY:
    Type: Number
  LAMBDATIMEOUT:
    Type: Number

Resources:

  ApiGateway:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: default

  DomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Properties:
      RegionalCertificateArn: !Ref APICERTIFICATEARN
      DomainName: !Ref APIDOMAINNAME
      EndpointConfiguration: 
        Types:
          - REGIONAL
  
  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref ApiGateway
      Stage: !Ref ApiGateway.Stage
      BasePath: (none)

  ApiFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: short-url-api
      Handler: node_modules/configurapi-runner-lambda-api/src/index.handler
      Runtime: nodejs10.x
      CodeUri:
          Bucket: !Ref S3CODEBUCKET
          Key: !Ref S3CODEKEY
      MemorySize: !Ref LAMBDAMEMORY
      Timeout: !Ref LAMBDATIMEOUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !ImportValue sam-table-name-export2
      Environment:
        Variables:
          EXAMPLE: !Ref APIDOMAINNAME
          TABLE_NAME: !ImportValue sam-table-name-export2
      Events:
        AnyRequest:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref ApiGateway
        AnySubRequest:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGateway
  
  Logging:
    Type: AWS::Logs::LogGroup
    DependsOn: ApiFunction
    Properties: 
      LogGroupName: !Join [/,["/aws/lambda", !Ref ApiFunction ]]
      RetentionInDays: 60

  CloudFront:
    Type: AWS::CloudFront::Distribution
    DeletionPolicy: Retain
    Properties:
      DistributionConfig: 
        Aliases:
          - !Ref CFDOMAINNAME
        Comment:  !Join 
        - " "
        - - "Short URL"
          - !Ref CFDOMAINNAME 
          - "deployed with SAM CloudFormation." 
        CustomErrorResponses:
        - ErrorCachingMinTTL : 300
          ErrorCode : 403
          ResponseCode : 200
          ResponsePagePath : '/index.html'
        - ErrorCachingMinTTL : 300
          ErrorCode : 404
          ResponseCode : 200
          ResponsePagePath : '/index.html'
        DefaultRootObject: index.html
        Enabled: TRUE
        HttpVersion: http2
        IPV6Enabled: TRUE
        Origins:
          - Id: !Join [ "-", [ "APIGateway", !Ref ApiGateway ] ]
            DomainName:  !Sub "${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com"
            OriginPath: !Join [ "", [ "/", !Ref ApiGateway.Stage ] ]
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: "https-only"
              OriginSSLProtocols:
                - "TLSv1"
                - "TLSv1.1"
                - "TLSv1.2"
        DefaultCacheBehavior:
          TargetOriginId: !Join [ "-", [ "APIGateway", !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${ApiGateway.Stage}/" ] ]
          ForwardedValues:
            QueryString: 'true'
          ViewerProtocolPolicy : redirect-to-https
          Compress: TRUE
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref CFCERTIFICATEARN
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

Outputs:
  DomainName:
    Description: Domain Name of API
    Value:  !Ref DomainName
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName", domain ] ]
  RestApiId:
    Description: Id of API
    Value:  !Ref ApiGateway
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName", api-id ] ]
  RestApiStage:
    Description: Stage of API
    Value:  default
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName", api-stage ] ]

